services:
  owner-postgres:
    image: postgres:latest
    container_name: owner-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "4500:${POSTGRES_PORT}"
    networks:
      - owner
    volumes:
      - owner_data:/var/lib/postgresql/data
    restart: always

  owner-webapi:
    image: owner_api
    build:
      context: .
      dockerfile: Dockerfile
    container_name: owner-webapi
    environment:
      ASPNETCORE_URLS: http://+:80
      POSTGRES_CONNECTION_STRING: "Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB};Pooling=true;"

      BLOB_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=${AZURE_BLOB_DEFAULT_PROTOCOL};AccountName=${AZURE_BLOB_ACCOUNT_NAME};AccountKey=${AZURE_BLOB_ACCOUNT_KEY};EndpointSuffix=${AZURE_BLOB_ENDPOINT_SUFFIX}"

      JWT_KEY: "${JWT_KEY}"
      JWT_LIFE_TIME_IN_MINUTES: "${JWT_LIFE_TIME_IN_MINUTES}"
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}

    depends_on:
      - owner-postgres
    ports:
      - "5000:80"
    networks:
      - owner
    restart: always

volumes:
  owner_data:

networks:
  owner:
    driver: bridge